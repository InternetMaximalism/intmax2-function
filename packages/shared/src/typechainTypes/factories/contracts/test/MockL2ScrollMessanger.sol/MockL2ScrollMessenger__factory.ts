/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { ContractDeployTransaction, ContractRunner, Signer } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  MockL2ScrollMessenger,
  MockL2ScrollMessengerInterface,
} from "../../../../contracts/test/MockL2ScrollMessanger.sol/MockL2ScrollMessenger";

const _abi = [
  {
    inputs: [],
    name: "ErrorZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageHash",
        type: "bytes32",
      },
    ],
    name: "FailedRelayedMessage",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageHash",
        type: "bytes32",
      },
    ],
    name: "RelayedMessage",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "messageNonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "SentMessage",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldMaxFailedExecutionTimes",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newMaxFailedExecutionTimes",
        type: "uint256",
      },
    ],
    name: "UpdateMaxFailedExecutionTimes",
    type: "event",
  },
  {
    inputs: [],
    name: "_xDomainMessageSender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "relayMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_gasLimit",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_gasLimit",
        type: "uint256",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "xDomainMessageSender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50610d988061001f6000396000f3fe60806040526004361061004a5760003560e01c80635f7b15771461004f5780636e296e451461006b5780638ef1332e146100965780639567b23e146100bf578063b2267a7b146100ea575b600080fd5b610069600480360381019061006491906106c5565b610106565b005b34801561007757600080fd5b5061008061015e565b60405161008d919061076e565b60405180910390f35b3480156100a257600080fd5b506100bd60048036038101906100b891906108ca565b610188565b005b3480156100cb57600080fd5b506100d4610215565b6040516100e1919061076e565b60405180910390f35b61010460048036038101906100ff9190610961565b61023b565b005b610156868686868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505085610292565b505050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000610197868686868661037e565b80519060200120905060008082815260200190815260200160002060009054906101000a900460ff1615610200576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f790610a6c565b60405180910390fd5b61020d8686868585610421565b505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61028b858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505084610292565b5050505050565b8234146102d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cb90610ad8565b60405180910390fd5b6000600254905060006102ea338787858861037e565b8051906020012090508573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f104371f3b442861a2a7b82a070afbbaab748bb13757bf47769e170e37809ec1e878587896040516103569493929190610b86565b60405180910390a36002600081548092919061037190610c01565b9190505550505050505050565b60608585858585604051602401610399959493929190610c49565b6040516020818303038152906040527f8ef1332e000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905095945050505050565b84600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008473ffffffffffffffffffffffffffffffffffffffff16848460405161048a9190610cdf565b60006040518083038185875af1925050503d80600081146104c7576040519150601f19603f3d011682016040523d82523d6000602084013e6104cc565b606091505b505090506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550801561057557600160008084815260200190815260200160002060006101000a81548160ff021916908315150217905550817f4641df4a962071e12719d8c8c8e5ac7fc4d97b927346a3d7a335b1f7517e133c60405160405180910390a26105b0565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a790610d42565b60405180910390fd5b505050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105f7826105cc565b9050919050565b610607816105ec565b811461061257600080fd5b50565b600081359050610624816105fe565b92915050565b6000819050919050565b61063d8161062a565b811461064857600080fd5b50565b60008135905061065a81610634565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261068557610684610660565b5b8235905067ffffffffffffffff8111156106a2576106a1610665565b5b6020830191508360018202830111156106be576106bd61066a565b5b9250929050565b60008060008060008060a087890312156106e2576106e16105c2565b5b60006106f089828a01610615565b965050602061070189828a0161064b565b955050604087013567ffffffffffffffff811115610722576107216105c7565b5b61072e89828a0161066f565b9450945050606061074189828a0161064b565b925050608061075289828a01610615565b9150509295509295509295565b610768816105ec565b82525050565b6000602082019050610783600083018461075f565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6107d78261078e565b810181811067ffffffffffffffff821117156107f6576107f561079f565b5b80604052505050565b60006108096105b8565b905061081582826107ce565b919050565b600067ffffffffffffffff8211156108355761083461079f565b5b61083e8261078e565b9050602081019050919050565b82818337600083830152505050565b600061086d6108688461081a565b6107ff565b90508281526020810184848401111561088957610888610789565b5b61089484828561084b565b509392505050565b600082601f8301126108b1576108b0610660565b5b81356108c184826020860161085a565b91505092915050565b600080600080600060a086880312156108e6576108e56105c2565b5b60006108f488828901610615565b955050602061090588828901610615565b94505060406109168882890161064b565b93505060606109278882890161064b565b925050608086013567ffffffffffffffff811115610948576109476105c7565b5b6109548882890161089c565b9150509295509295909350565b60008060008060006080868803121561097d5761097c6105c2565b5b600061098b88828901610615565b955050602061099c8882890161064b565b945050604086013567ffffffffffffffff8111156109bd576109bc6105c7565b5b6109c98882890161066f565b935093505060606109dc8882890161064b565b9150509295509295909350565b600082825260208201905092915050565b7f4d6573736167652077617320616c7265616479207375636365737366756c6c7960008201527f2065786563757465640000000000000000000000000000000000000000000000602082015250565b6000610a566029836109e9565b9150610a61826109fa565b604082019050919050565b60006020820190508181036000830152610a8581610a49565b9050919050565b7f6d73672e76616c7565206d69736d617463680000000000000000000000000000600082015250565b6000610ac26012836109e9565b9150610acd82610a8c565b602082019050919050565b60006020820190508181036000830152610af181610ab5565b9050919050565b610b018161062a565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b41578082015181840152602081019050610b26565b60008484015250505050565b6000610b5882610b07565b610b628185610b12565b9350610b72818560208601610b23565b610b7b8161078e565b840191505092915050565b6000608082019050610b9b6000830187610af8565b610ba86020830186610af8565b610bb56040830185610af8565b8181036060830152610bc78184610b4d565b905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c0c8261062a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c3e57610c3d610bd2565b5b600182019050919050565b600060a082019050610c5e600083018861075f565b610c6b602083018761075f565b610c786040830186610af8565b610c856060830185610af8565b8181036080830152610c978184610b4d565b90509695505050505050565b600081905092915050565b6000610cb982610b07565b610cc38185610ca3565b9350610cd3818560208601610b23565b80840191505092915050565b6000610ceb8284610cae565b915081905092915050565b7f4661696c656420746f2065786563757465206d65737361676500000000000000600082015250565b6000610d2c6019836109e9565b9150610d3782610cf6565b602082019050919050565b60006020820190508181036000830152610d5b81610d1f565b905091905056fea26469706673582212209b65f9e9fd3c92fe13c254501d95c48707c8bc1458d3d83b16515c92838d919f64736f6c634300081b0033";

type MockL2ScrollMessengerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockL2ScrollMessengerConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockL2ScrollMessenger__factory extends ContractFactory {
  constructor(...args: MockL2ScrollMessengerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockL2ScrollMessenger & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockL2ScrollMessenger__factory {
    return super.connect(runner) as MockL2ScrollMessenger__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockL2ScrollMessengerInterface {
    return new Interface(_abi) as MockL2ScrollMessengerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockL2ScrollMessenger {
    return new Contract(address, _abi, runner) as unknown as MockL2ScrollMessenger;
  }
}
